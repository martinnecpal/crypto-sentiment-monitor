# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Database
*.db
*.sqlite3

# Logs
*.log
logs/

# Virtual Environment
venv/
env/
ENV/

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Output files
*.json
*.txt
!requirements.txt
daily_report_*.txt
sentiment_summary_*.json
</gitignore>

### .github/workflows/crypto-monitor.yml
```yaml
name: Crypto Sentiment Monitor

on:
  schedule:
    # Run every 3 hours
    - cron: '0 */3 * * *'
  # Allow manual trigger
  workflow_dispatch:
  # Run on push to test
  push:
    branches: [ main, develop ]

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "import nltk; nltk.download('punkt'); nltk.download('vader_lexicon')"
    
    - name: Run crypto sentiment monitoring
      run: |
        cd src
        python monitor_once.py
    
    - name: Upload sentiment data
      uses: actions/upload-artifact@v3
      with:
        name: sentiment-data-${{ github.run_number }}
        path: |
          src/*.json
          src/*.txt
        retention-days: 30
    
    - name: Upload logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: logs-${{ github.run_number }}
        path: |
          src/*.log
        retention-days: 7

    - name: Display summary
      run: |
        cd src
        if [ -f sentiment_summary.json ]; then
          echo "=== Sentiment Summary ==="
          cat sentiment_summary.json
        fi